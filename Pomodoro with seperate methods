<!DOCTYPE html>
<html>
<p>Lets show how a clock works</p>
<p id = 'demo'></p>
<form>
  <input type = "number" value = '0' id = 'work'>Worktime
  </br>
  <input type = 'number' value = '0' id = 'break'>Breaktime
</form>
<button class = 'btn' id = 'timer'>TIMER</button>
</html>


var minutes;
var seconds;
var workTime;
var breakTime;
var countDown;
var timer;

  
  
//When button pressed, retrieve values of each timer and start the timer countdown with workTime until finished, then breakTime.

$('#timer').click(function(){
  console.log('Button pressed');  
  
  //If timer is running and button is pressed, stop the timer and change variable to false (variable that depicts whether timer is running or not) 
  if (timer == true){
    timer = false;
    console.log('stopping timer, timer = false');
    stopTimer();
    return;
  }
  
  if (timer == false){
    timerFunc();
    return;
  }
  //Think about using recursion? 
  //function count(){
  //workTime -= 1000
  //countDown = setTimeout(function(){count},1000);
  //execute once with setTimeout, use recursion to call itself?
  
  workTime = (document.getElementById('work').value) * (60 * 1000);
  breakTime = (document.getElementById('break').value) * (60 * 1000);
  
  timerFunc();
});

function timerFunc(){
  //Track if timer is currently running or not. 
  console.log('timerFunc starting');
  
  if (!timer){
    console.log('timer will be true');
    timer = true;    
  }
  
  console.log('workTime:', workTime, 'breakTime:', breakTime);
  
  if (breakTime <= 0){
    console.log("reloading page");
    location.reload();
  }
  
  if (workTime > 0){
    workTime -= 1000;
    
    minutes = Math.floor((workTime % (1000*60*60)) / (1000*60));
    seconds = Math.floor ((workTime % (1000*60)) / 1000);
    document.getElementById('demo').innerHTML = minutes + ":" + seconds;
  }
  
  else{
    breakTime -= 1000;
    minutes = Math.floor((breakTime % (1000*60*60)) / (1000*60));
    seconds = Math.floor ((breakTime % (1000*60)) / 1000);
    document.getElementById('demo').innerHTML = minutes + ":" + seconds;
  }
  
  
  countDown = setTimeout(function(){timerFunc()},1000);
  
  
};

function stopTimer(){
  clearInterval(countDown);
}





